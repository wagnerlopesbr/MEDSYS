{"ast":null,"code":"var _jsxFileName = \"/home/wl/myProjects/crud1/frontend/src/utils/components/PopUp.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PopUp({\n  currentPatient\n}) {\n  _s();\n  const [open, setOpen] = useState(false);\n  const togglePopup = () => {\n    setOpen(!open);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: typeof currentPatient !== \"undefined\" && currentPatient.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: patient.first_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: patient.last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: patient.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: patient.gender === 'Male' ? 'blue' : 'rgb(255, 0, 255)'\n        },\n        children: patient.gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, patient.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_s(PopUp, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = PopUp;\n;\nvar _c;\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PopUp","currentPatient","_s","open","setOpen","useState","togglePopup","className","children","map","patient","first_name","fileName","_jsxFileName","lineNumber","columnNumber","last_name","style","textAlign","age","color","gender","id","_c","$RefreshReg$"],"sources":["/home/wl/myProjects/crud1/frontend/src/utils/components/PopUp.js"],"sourcesContent":["import React from 'react';\nimport '../../App.css';\n\nexport default function PopUp({ currentPatient }) {\n  const [open, setOpen] = useState(false);\n  const togglePopup = () => {\n    setOpen(!open);\n  };\n  return <div className=\"popup\">\n      { typeof currentPatient !== \"undefined\" &&\n        currentPatient.map((patient) => (\n          <div key={ patient.id }>\n            <p>{ patient.first_name }</p>\n            <p>{ patient.last_name }</p>\n            <p style={{ textAlign: 'center' }}>{ patient.age }</p>\n            <p style={{\n              textAlign: 'center',\n              color: patient.gender === 'Male' ? 'blue' : 'rgb(255, 0, 255)',\n              }}\n            >\n              { patient.gender }\n            </p>\n            <p>\n              <button className=\"save-btn\">Save Changes</button>\n              <button className=\"cancel-btn\">Cancel</button>\n            </p>\n          </div>\n        ))\n      }\n  </div>\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBF,OAAO,CAAC,CAACD,IAAI,CAAC;EAChB,CAAC;EACD,oBAAOJ,OAAA;IAAKQ,SAAS,EAAC,OAAO;IAAAC,QAAA,EACvB,OAAOP,cAAc,KAAK,WAAW,IACrCA,cAAc,CAACQ,GAAG,CAAEC,OAAO,iBACzBX,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,EAAKE,OAAO,CAACC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7BhB,OAAA;QAAAS,QAAA,EAAKE,OAAO,CAACM;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5BhB,OAAA;QAAGkB,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAV,QAAA,EAAGE,OAAO,CAACS;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtDhB,OAAA;QAAGkB,KAAK,EAAE;UACRC,SAAS,EAAE,QAAQ;UACnBE,KAAK,EAAEV,OAAO,CAACW,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG;QAC5C,CAAE;QAAAb,QAAA,EAEAE,OAAO,CAACW;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACJhB,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAQQ,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClDhB,OAAA;UAAQQ,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA,GAdKL,OAAO,CAACY,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAehB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AACR;AAACb,EAAA,CA3BuBF,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA2B5B;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}